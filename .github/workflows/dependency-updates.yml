name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-python-dependencies:
    name: Update Python Dependencies
    runs-on: ubuntu-latest
    if: github.repository_owner == 'Tylerastro'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      
      - name: Update dependencies
        working-directory: backend
        run: |
          # Create backup of current requirements
          cp requirements.txt requirements.txt.backup
          cp requirements-test.txt requirements-test.txt.backup
          
          # Update dependencies (this is a placeholder - uv doesn't have direct upgrade)
          # In practice, you'd use tools like pip-tools or similar
          echo "Dependencies check completed - manual updates may be needed"
      
      - name: Test updated dependencies
        working-directory: backend
        run: |
          uv pip install -r requirements.txt -r requirements-test.txt
          uv run pytest -m "unit" --tb=short
        continue-on-error: true
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update Python dependencies'
          title: 'Automated Python dependency updates'
          body: |
            ## Automated Dependency Update
            
            This PR contains automated updates to Python dependencies.
            
            ### Changes
            - Updated backend dependencies
            
            ### Testing
            - Unit tests were run to verify compatibility
            
            Please review the changes and ensure all tests pass before merging.
          branch: automated-python-updates
          delete-branch: true
          draft: true

  update-node-dependencies:
    name: Update Node Dependencies  
    runs-on: ubuntu-latest
    if: github.repository_owner == 'Tylerastro'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "21"
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Update dependencies
        working-directory: frontend
        run: |
          # Update patch and minor versions
          npm update
          
          # Check for major updates (requires manual review)
          npx npm-check-updates --target minor > ncu-report.txt || true
          
      - name: Test updated dependencies
        working-directory: frontend
        run: |
          npm run build
          npm run lint
        continue-on-error: true
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update Node.js dependencies'
          title: 'Automated Node.js dependency updates'
          body: |
            ## Automated Dependency Update
            
            This PR contains automated updates to Node.js dependencies.
            
            ### Changes
            - Updated frontend dependencies (patch/minor versions only)
            
            ### Testing
            - Build and lint tests were run to verify compatibility
            
            Please review the changes and ensure all tests pass before merging.
          branch: automated-node-updates
          delete-branch: true
          draft: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Python security audit
        working-directory: backend
        run: |
          pip install safety
          safety check --json --output safety-report.json || true
          safety check || true
        continue-on-error: true
      
      - name: Node.js security audit
        working-directory: frontend
        run: |
          npm audit --audit-level=moderate --json > npm-audit.json || true
          npm audit --audit-level=moderate || true
        continue-on-error: true
      
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-reports
          path: |
            backend/safety-report.json
            frontend/npm-audit.json
          retention-days: 90