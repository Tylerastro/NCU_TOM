# Generated by Django 5.1.3 on 2024-12-23 08:42

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('helpers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ra', models.FloatField(db_index=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360)])),
                ('dec', models.FloatField(db_index=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('redshift', models.FloatField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('sed', models.JSONField(blank=True, null=True)),
                ('hashed_sed', models.CharField(blank=True, max_length=64, null=True)),
                ('simbad', models.JSONField(blank=True, null=True)),
                ('hashed_simbad', models.CharField(blank=True, max_length=64, null=True)),
                ('notes', models.TextField(blank=True, max_length=100, null=True)),
                ('tags', models.ManyToManyField(related_name='targets', to='helpers.tags')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Target',
                'indexes': [models.Index(fields=['ra', 'dec'], name='target_coords')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('user', 'name'), name='unique_target_name_per_user')],
            },
        ),
    ]
